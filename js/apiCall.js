/**
 * Get a list of pokemons from pokeapi
 * 
 * @param {number} nPokemon The number of pokemons to retrieve
 * @return {array} The pokemons list
 */

async function fetchPokemonFromApi(nPokemon=20) {
  const apiUrl = `https://pokeapi.co/api/v2/pokemon?limit=${nPokemon}`;

  pokeList = []

  // getting data from the server
  const response = await fetch(apiUrl);
  const responseData = await response.json();

  for(let data of responseData.results) {
    pokeObject = await pokemonFromData(data);
    pokeList.push(pokeObject);
}

  return pokeList;
}

/**
 * Get pokemon details
 * 
 * @param {object} data Data generated by fetchPokemonFromApi()
 * @return {object} An object containing relevent detail about the pokemon
 */

async function pokemonFromData(data) {
  const pokeName = data.name;
  const pokeUrl = data.url;

  // object representing a pokemon
  let pokeObject = {
    'name': pokeName,
    'abilities': [],
    'types': [],
    'height': 0,
    'weight': 0,
    'imageUrl': '',
    'id': 0
  }

  // getting data from the server
  const response = await fetch(pokeUrl);
  const responseData = await response.json();

  // populating our pokemon object
  for (let a of responseData.abilities) {
    let ability = a.ability.name;
    pokeObject.abilities.push(ability);
  }
  //
  for (let t of responseData.types) {
    let type = t.type.name;
    pokeObject.types.push(type);
  }
  //
  pokeObject.height = responseData.height;
  pokeObject.weight = responseData.weight;
  pokeObject.imageUrl = responseData.sprites.front_default;
  pokeObject.id = responseData.id;

  return pokeObject;
}

/**
 * Retrieve pokemon from list
 * 
 * @param {number} id The ID of the pokemon we wish to retrieve
 * @return {object} The selected pokemon's pokeObject
 */

function getPokeObjectFromId(id) {
  for (let pokeObject of pokeList) {
    if (pokeObject.id === id) {
      return pokeObject;
    }
  }
}